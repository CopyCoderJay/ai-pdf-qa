{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Pdfc\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, AlertCircle, Plus } from 'lucide-react';\nimport axios from 'axios';\n\n// Add your Gemini API key here\n// Client no longer holds the API key; backend proxies Gemini\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://127.0.0.1:8000';\nconst callGemini = async prompt => {\n  var _res$data;\n  const res = await axios.post(`${BACKEND_URL}/generate`, {\n    prompt\n  }, {\n    timeout: 30000\n  });\n  const t = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.text) || '';\n  if (!t) throw new Error('Empty response from generation backend');\n  return t.trim();\n};\nconst ChatInterface = ({\n  conversationHistory,\n  onNewMessage,\n  documentInfo,\n  suggestedQuestion,\n  onSuggestedQuestionUsed,\n  onUploadFile\n}) => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Set suggested question when it changes\n  useEffect(() => {\n    if (suggestedQuestion) {\n      setInputMessage(suggestedQuestion);\n    }\n  }, [suggestedQuestion]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversationHistory]);\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    // Allow asking even before upload; will prompt below if missing docId\n\n    const question = inputMessage.trim();\n    setInputMessage('');\n    setIsLoading(true);\n    setError('');\n\n    // Clear suggested question after use\n    if (suggestedQuestion && onSuggestedQuestionUsed) {\n      onSuggestedQuestionUsed();\n    }\n    try {\n      const response = await generateAIResponse(question);\n      onNewMessage(question, response);\n    } catch (err) {\n      setError(`Error getting AI response: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateAIResponse = async question => {\n    // If backend docId exists on documentInfo, use backend similarity search first\n    if (documentInfo && documentInfo.docId) {\n      try {\n        var _res$data2;\n        const res = await axios.post('http://127.0.0.1:8000/query', {\n          doc_id: documentInfo.docId,\n          question,\n          top_k: 5\n        }, {\n          timeout: 20000\n        });\n        const hits = ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.results) || [];\n        const context = hits.map((h, i) => `[p:${h.page}] ${h.text}`).join('\\n\\n');\n        const prompt = `You are a helpful AI assistant. Use the context to answer.\\n\\nContext:\\n${context}\\n\\nQuestion: ${question}\\n\\nAnswer:`;\n        return await callGemini(prompt);\n      } catch (e) {\n        console.warn('Backend query failed, falling back to client mode', e);\n      }\n    }\n    try {\n      // Get relevant text chunks from the PDF for context\n      let contextText = \"\";\n      if (documentInfo && documentInfo.textChunks) {\n        // Use more chunks for better context (first 5 chunks)\n        const relevantChunks = documentInfo.textChunks.slice(0, 5);\n        contextText = relevantChunks.map((chunk, index) => `[Page ${chunk.page}, Chunk ${index + 1}]: ${chunk.text}`).join('\\n\\n');\n        console.log(`Using ${relevantChunks.length} chunks from pages: ${relevantChunks.map(c => c.page).join(', ')}`);\n      }\n\n      // Create a context-aware prompt for PDF Q&A\n      const prompt = `You are a helpful AI assistant helping users understand PDF documents. \n\nContext from the uploaded PDF:\n${contextText || \"PDF content is being processed. Please ask general questions about the document.\"}\n\nUser Question: ${question}\n\nPlease provide a helpful, informative response based on the PDF context above. If the question is about specific content in the PDF, use the context to answer it clearly. If it's a general question about the document, provide relevant insights based on what you can see.\n\nAnswer:`;\n      console.log('Sending request to Gemini API with context...');\n      console.log('Context length:', contextText.length);\n      const generatedText = await callGemini(prompt);\n      return generatedText;\n    } catch (error) {\n      console.error('Gemini API Error:', error);\n      if (error.response) {\n        // Server responded with error status\n        if (error.response.status === 400) {\n          throw new Error('Invalid request to Gemini API. Please check your API key and try again.');\n        } else if (error.response.status === 401) {\n          throw new Error('Invalid API key. Please check your Google Gemini API key.');\n        } else if (error.response.status === 403) {\n          throw new Error('Access denied. Please check your API key permissions.');\n        } else if (error.response.status === 429) {\n          throw new Error('Rate limit exceeded. Please wait a moment before asking another question.');\n        } else if (error.response.status === 500) {\n          throw new Error('Gemini API server error. Please try again in a few minutes.');\n        } else if (error.response.status === 404) {\n          throw new Error('Gemini model not found. Please try again later.');\n        } else {\n          throw new Error(`Gemini API Error ${error.response.status}: ${error.response.statusText}`);\n        }\n      } else if (error.request) {\n        // Request was made but no response received\n        throw new Error('No response from Gemini API. Please check your internet connection and try again.');\n      } else {\n        // Something else happened\n        throw new Error(error.message || 'Failed to connect to Gemini API. Please try again.');\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleAttachClick = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const handleFileSelected = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file && file.type.includes('pdf') && onUploadFile) {\n      onUploadFile(file);\n    }\n    e.target.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 h-96 overflow-y-auto\",\n      children: conversationHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: documentInfo ? 'Start asking questions about your PDF document!' : 'Please upload a PDF first to begin chatting.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [conversationHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-primary text-white px-4 py-2 rounded-2xl rounded-br-md max-w-xs lg:max-w-md\",\n              children: message.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md max-w-xs lg:max-w-md\",\n              children: message.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 text-center mb-4\",\n            children: message.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI is thinking...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"text-red-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-700 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t p-4 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-2xl border shadow-sm px-3 py-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Ask anything\",\n              className: \"flex-1 px-3 py-2 outline-none\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \".pdf\",\n              className: \"hidden\",\n              onChange: handleFileSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleAttachClick,\n              title: \"Attach PDF\",\n              className: \"w-9 h-9 rounded-full border bg-gray-50 hover:bg-gray-100 flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              disabled: !inputMessage.trim() || isLoading,\n              className: \"bg-primary hover:bg-primary/90 disabled:bg-gray-300 text-white px-4 py-2 rounded-full transition-colors flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Send, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), \"Send\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"GhedN+1JTs+FMDMUCeWFh5KqbbQ=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","AlertCircle","Plus","axios","jsxDEV","_jsxDEV","BACKEND_URL","callGemini","prompt","_res$data","res","post","timeout","t","data","text","Error","trim","ChatInterface","conversationHistory","onNewMessage","documentInfo","suggestedQuestion","onSuggestedQuestionUsed","onUploadFile","_s","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","messagesEndRef","fileInputRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","question","response","generateAIResponse","err","message","docId","_res$data2","doc_id","top_k","hits","results","context","map","h","i","page","join","e","console","warn","contextText","textChunks","relevantChunks","slice","chunk","index","log","length","c","generatedText","status","statusText","request","handleKeyPress","key","shiftKey","preventDefault","handleAttachClick","_fileInputRef$current","click","handleFileSelected","_e$target$files","file","target","files","type","includes","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","answer","timestamp","toLocaleTimeString","ref","size","onChange","onKeyPress","placeholder","disabled","accept","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/sanja/Pdfc/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Send, AlertCircle, Plus } from 'lucide-react';\nimport axios from 'axios';\n\n// Add your Gemini API key here\n// Client no longer holds the API key; backend proxies Gemini\nconst BACKEND_URL = 'http://127.0.0.1:8000';\nconst callGemini = async (prompt) => {\n  const res = await axios.post(`${BACKEND_URL}/generate`, { prompt }, { timeout: 30000 });\n  const t = res.data?.text || '';\n  if (!t) throw new Error('Empty response from generation backend');\n  return t.trim();\n};\n\nconst ChatInterface = ({ conversationHistory, onNewMessage, documentInfo, suggestedQuestion, onSuggestedQuestionUsed, onUploadFile }) => {\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Set suggested question when it changes\n  useEffect(() => {\n    if (suggestedQuestion) {\n      setInputMessage(suggestedQuestion);\n    }\n  }, [suggestedQuestion]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversationHistory]);\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    // Allow asking even before upload; will prompt below if missing docId\n\n    const question = inputMessage.trim();\n    setInputMessage('');\n    setIsLoading(true);\n    setError('');\n\n    // Clear suggested question after use\n    if (suggestedQuestion && onSuggestedQuestionUsed) {\n      onSuggestedQuestionUsed();\n    }\n\n    try {\n      const response = await generateAIResponse(question);\n      onNewMessage(question, response);\n    } catch (err) {\n      setError(`Error getting AI response: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const generateAIResponse = async (question) => {\n    // If backend docId exists on documentInfo, use backend similarity search first\n    if (documentInfo && documentInfo.docId) {\n      try {\n        const res = await axios.post('http://127.0.0.1:8000/query', {\n          doc_id: documentInfo.docId,\n          question,\n          top_k: 5\n        }, { timeout: 20000 });\n        const hits = res.data?.results || [];\n        const context = hits.map((h, i) => `[p:${h.page}] ${h.text}`).join('\\n\\n');\n        const prompt = `You are a helpful AI assistant. Use the context to answer.\\n\\nContext:\\n${context}\\n\\nQuestion: ${question}\\n\\nAnswer:`;\n        return await callGemini(prompt);\n      } catch (e) {\n        console.warn('Backend query failed, falling back to client mode', e);\n      }\n    }\n    try {\n      // Get relevant text chunks from the PDF for context\n      let contextText = \"\";\n      if (documentInfo && documentInfo.textChunks) {\n        // Use more chunks for better context (first 5 chunks)\n        const relevantChunks = documentInfo.textChunks.slice(0, 5);\n        contextText = relevantChunks.map((chunk, index) => \n          `[Page ${chunk.page}, Chunk ${index + 1}]: ${chunk.text}`\n        ).join('\\n\\n');\n        \n        console.log(`Using ${relevantChunks.length} chunks from pages: ${relevantChunks.map(c => c.page).join(', ')}`);\n      }\n\n      // Create a context-aware prompt for PDF Q&A\n      const prompt = `You are a helpful AI assistant helping users understand PDF documents. \n\nContext from the uploaded PDF:\n${contextText || \"PDF content is being processed. Please ask general questions about the document.\"}\n\nUser Question: ${question}\n\nPlease provide a helpful, informative response based on the PDF context above. If the question is about specific content in the PDF, use the context to answer it clearly. If it's a general question about the document, provide relevant insights based on what you can see.\n\nAnswer:`;\n\n      console.log('Sending request to Gemini API with context...');\n      console.log('Context length:', contextText.length);\n      \n      const generatedText = await callGemini(prompt);\n      return generatedText;\n      \n    } catch (error) {\n      console.error('Gemini API Error:', error);\n      \n      if (error.response) {\n        // Server responded with error status\n        if (error.response.status === 400) {\n          throw new Error('Invalid request to Gemini API. Please check your API key and try again.');\n        } else if (error.response.status === 401) {\n          throw new Error('Invalid API key. Please check your Google Gemini API key.');\n        } else if (error.response.status === 403) {\n          throw new Error('Access denied. Please check your API key permissions.');\n        } else if (error.response.status === 429) {\n          throw new Error('Rate limit exceeded. Please wait a moment before asking another question.');\n        } else if (error.response.status === 500) {\n          throw new Error('Gemini API server error. Please try again in a few minutes.');\n        } else if (error.response.status === 404) {\n          throw new Error('Gemini model not found. Please try again later.');\n        } else {\n          throw new Error(`Gemini API Error ${error.response.status}: ${error.response.statusText}`);\n        }\n      } else if (error.request) {\n        // Request was made but no response received\n        throw new Error('No response from Gemini API. Please check your internet connection and try again.');\n      } else {\n        // Something else happened\n        throw new Error(error.message || 'Failed to connect to Gemini API. Please try again.');\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleAttachClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelected = (e) => {\n    const file = e.target.files?.[0];\n    if (file && file.type.includes('pdf') && onUploadFile) {\n      onUploadFile(file);\n    }\n    e.target.value = '';\n  };\n\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm\">\n      {/* Chat Messages */}\n      <div className=\"p-6 h-96 overflow-y-auto\">\n        {conversationHistory.length === 0 ? (\n          <div className=\"text-center text-gray-500 py-8\">\n            <p>{documentInfo ? 'Start asking questions about your PDF document!' : 'Please upload a PDF first to begin chatting.'}</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {conversationHistory.map((message, index) => (\n              <div key={index} className=\"animate-fade-in\">\n                {/* User Message */}\n                <div className=\"flex justify-end mb-3\">\n                  <div className=\"bg-primary text-white px-4 py-2 rounded-2xl rounded-br-md max-w-xs lg:max-w-md\">\n                    {message.question}\n                  </div>\n                </div>\n                \n                {/* AI Response */}\n                <div className=\"flex justify-start mb-3\">\n                  <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md max-w-xs lg:max-w-md\">\n                    {message.answer}\n                  </div>\n                </div>\n                \n                {/* Timestamp */}\n                <div className=\"text-xs text-gray-400 text-center mb-4\">\n                  {message.timestamp.toLocaleTimeString()}\n                </div>\n              </div>\n            ))}\n            \n            {/* Loading indicator */}\n            {isLoading && (\n              <div className=\"flex justify-start mb-3\">\n                <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\n                    <span>AI is thinking...</span>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n        )}\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"px-6 pb-4\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2\">\n            <AlertCircle className=\"text-red-500\" size={16} />\n            <span className=\"text-red-700 text-sm\">{error}</span>\n          </div>\n        </div>\n      )}\n\n      {/* Input Section - OpenAI-like composer with action chips */}\n      <div className=\"border-t p-4 bg-white\">\n        <div className=\"max-w-3xl mx-auto\">\n          <div className=\"rounded-2xl border shadow-sm px-3 py-2\">\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Ask anything\"\n                className=\"flex-1 px-3 py-2 outline-none\"\n                disabled={isLoading}\n              />\n              {/* Plus button to upload inside composer */}\n              <input ref={fileInputRef} type=\"file\" accept=\".pdf\" className=\"hidden\" onChange={handleFileSelected} />\n              <button\n                type=\"button\"\n                onClick={handleAttachClick}\n                title=\"Attach PDF\"\n                className=\"w-9 h-9 rounded-full border bg-gray-50 hover:bg-gray-100 flex items-center justify-center\"\n              >\n                <Plus size={16} />\n              </button>\n              <button\n                onClick={handleSendMessage}\n                disabled={!inputMessage.trim() || isLoading}\n                className=\"bg-primary hover:bg-primary/90 disabled:bg-gray-300 text-white px-4 py-2 rounded-full transition-colors flex items-center gap-2\"\n              >\n                <Send size={16} />\n                Send\n              </button>\n            </div>\n            {/* No extra action chips here to keep only the global \"+\" uploader */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}