{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Pdfc\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, AlertCircle } from 'lucide-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  conversationHistory,\n  onNewMessage,\n  apiToken,\n  documentInfo\n}) => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversationHistory]);\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    if (!apiToken) {\n      setError('Please set your Hugging Face API token in Settings first!');\n      return;\n    }\n    const question = inputMessage.trim();\n    setInputMessage('');\n    setIsLoading(true);\n    setError('');\n    try {\n      // For demo purposes, we'll simulate an AI response\n      // In production, you'd integrate with Hugging Face API\n      const response = await generateAIResponse(question, apiToken);\n      onNewMessage(question, response);\n    } catch (err) {\n      setError(`Error getting AI response: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateAIResponse = async (question, token) => {\n    try {\n      // This is a simplified version - in production you'd:\n      // 1. Send question to your backend\n      // 2. Backend would search PDF chunks using embeddings\n      // 3. Backend would call Hugging Face API with context\n\n      const response = await axios.post('https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2', {\n        inputs: `<s>[INST] Answer this question based on the PDF context: ${question}\\n\\nContext: This is a sample response based on the uploaded PDF document. In a production environment, this would contain relevant text chunks from your PDF.[/INST]`,\n        parameters: {\n          max_new_tokens: 512,\n          temperature: 0.7\n        }\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data && response.data[0]) {\n        const generatedText = response.data[0].generated_text;\n        const answer = generatedText.split('[/INST]')[-1] || generatedText;\n        return answer.trim();\n      } else {\n        return \"I'm sorry, I couldn't generate a response. Please try again.\";\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        throw new Error('Invalid API token. Please check your Hugging Face API token.');\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 503) {\n        throw new Error('Model is currently loading. Please try again in a few moments.');\n      } else {\n        throw new Error('Failed to get response from AI model.');\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 h-96 overflow-y-auto\",\n      children: conversationHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start asking questions about your PDF document!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [conversationHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-primary text-white px-4 py-2 rounded-2xl rounded-br-md max-w-xs lg:max-w-md\",\n              children: message.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md max-w-xs lg:max-w-md\",\n              children: message.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 text-center mb-4\",\n            children: message.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI is thinking...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"text-red-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-700 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask a question...\",\n          className: \"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputMessage.trim() || isLoading,\n          className: \"bg-primary hover:bg-primary/90 disabled:bg-gray-300 text-white px-6 py-2 rounded-full transition-colors flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Send, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), \"Send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"sZvOHAc27x0GSQYc24eAGMeJeWI=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","AlertCircle","axios","jsxDEV","_jsxDEV","ChatInterface","conversationHistory","onNewMessage","apiToken","documentInfo","_s","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","question","response","generateAIResponse","err","message","token","post","inputs","parameters","max_new_tokens","temperature","headers","data","generatedText","generated_text","answer","split","_error$response","_error$response2","status","Error","handleKeyPress","e","key","shiftKey","preventDefault","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","index","timestamp","toLocaleTimeString","ref","size","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sanja/Pdfc/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Send, AlertCircle } from 'lucide-react';\r\nimport axios from 'axios';\r\n\r\nconst ChatInterface = ({ conversationHistory, onNewMessage, apiToken, documentInfo }) => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [conversationHistory]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    if (!apiToken) {\r\n      setError('Please set your Hugging Face API token in Settings first!');\r\n      return;\r\n    }\r\n\r\n    const question = inputMessage.trim();\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // For demo purposes, we'll simulate an AI response\r\n      // In production, you'd integrate with Hugging Face API\r\n      const response = await generateAIResponse(question, apiToken);\r\n      \r\n      onNewMessage(question, response);\r\n    } catch (err) {\r\n      setError(`Error getting AI response: ${err.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateAIResponse = async (question, token) => {\r\n    try {\r\n      // This is a simplified version - in production you'd:\r\n      // 1. Send question to your backend\r\n      // 2. Backend would search PDF chunks using embeddings\r\n      // 3. Backend would call Hugging Face API with context\r\n      \r\n      const response = await axios.post(\r\n        'https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.2',\r\n        {\r\n          inputs: `<s>[INST] Answer this question based on the PDF context: ${question}\\n\\nContext: This is a sample response based on the uploaded PDF document. In a production environment, this would contain relevant text chunks from your PDF.[/INST]`,\r\n          parameters: {\r\n            max_new_tokens: 512,\r\n            temperature: 0.7\r\n          }\r\n        },\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.data && response.data[0]) {\r\n        const generatedText = response.data[0].generated_text;\r\n        const answer = generatedText.split('[/INST]')[-1] || generatedText;\r\n        return answer.trim();\r\n      } else {\r\n        return \"I'm sorry, I couldn't generate a response. Please try again.\";\r\n      }\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        throw new Error('Invalid API token. Please check your Hugging Face API token.');\r\n      } else if (error.response?.status === 503) {\r\n        throw new Error('Model is currently loading. Please try again in a few moments.');\r\n      } else {\r\n        throw new Error('Failed to get response from AI model.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm\">\r\n      {/* Chat Messages */}\r\n      <div className=\"p-6 h-96 overflow-y-auto\">\r\n        {conversationHistory.length === 0 ? (\r\n          <div className=\"text-center text-gray-500 py-8\">\r\n            <p>Start asking questions about your PDF document!</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {conversationHistory.map((message, index) => (\r\n              <div key={index} className=\"animate-fade-in\">\r\n                {/* User Message */}\r\n                <div className=\"flex justify-end mb-3\">\r\n                  <div className=\"bg-primary text-white px-4 py-2 rounded-2xl rounded-br-md max-w-xs lg:max-w-md\">\r\n                    {message.question}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* AI Response */}\r\n                <div className=\"flex justify-start mb-3\">\r\n                  <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md max-w-xs lg:max-w-md\">\r\n                    {message.answer}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Timestamp */}\r\n                <div className=\"text-xs text-gray-400 text-center mb-4\">\r\n                  {message.timestamp.toLocaleTimeString()}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {/* Loading indicator */}\r\n            {isLoading && (\r\n              <div className=\"flex justify-start mb-3\">\r\n                <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\r\n                    <span>AI is thinking...</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"px-6 pb-4\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2\">\r\n            <AlertCircle className=\"text-red-500\" size={16} />\r\n            <span className=\"text-red-700 text-sm\">{error}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Input Section */}\r\n      <div className=\"border-t p-4\">\r\n        <div className=\"flex gap-3\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask a question...\"\r\n            className=\"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={!inputMessage.trim() || isLoading}\r\n            className=\"bg-primary hover:bg-primary/90 disabled:bg-gray-300 text-white px-6 py-2 rounded-full transition-colors flex items-center gap-2\"\r\n          >\r\n            <Send size={16} />\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}