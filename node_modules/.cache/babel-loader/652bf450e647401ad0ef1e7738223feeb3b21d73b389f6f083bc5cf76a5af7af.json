{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\Pdfc\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, AlertCircle } from 'lucide-react';\nimport axios from 'axios';\n\n// Add your Gemini API key here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GEMINI_API_KEY = \"AIzaSyAVnKwouHnPokho-KTK7KaEWQ4-1VuXm1g\";\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent\";\nconst ChatInterface = ({\n  conversationHistory,\n  onNewMessage,\n  documentInfo,\n  suggestedQuestion,\n  onSuggestedQuestionUsed\n}) => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Set suggested question when it changes\n  useEffect(() => {\n    if (suggestedQuestion) {\n      setInputMessage(suggestedQuestion);\n    }\n  }, [suggestedQuestion]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversationHistory]);\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n    const question = inputMessage.trim();\n    setInputMessage('');\n    setIsLoading(true);\n    setError('');\n\n    // Clear suggested question after use\n    if (suggestedQuestion && onSuggestedQuestionUsed) {\n      onSuggestedQuestionUsed();\n    }\n    try {\n      const response = await generateAIResponse(question);\n      onNewMessage(question, response);\n    } catch (err) {\n      setError(`Error getting AI response: ${err.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const generateAIResponse = async question => {\n    try {\n      // Get relevant text chunks from the PDF for context\n      let contextText = \"\";\n      if (documentInfo && documentInfo.textChunks) {\n        // For now, use the first few chunks as context\n        // In a full RAG implementation, you'd use semantic search here\n        const relevantChunks = documentInfo.textChunks.slice(0, 3);\n        contextText = relevantChunks.map((chunk, index) => `[Chunk ${index + 1}]: ${chunk.text}`).join('\\n\\n');\n      }\n\n      // Create a context-aware prompt for PDF Q&A\n      const prompt = `You are a helpful AI assistant helping users understand PDF documents. \n\nContext from the uploaded PDF:\n${contextText || \"PDF content is being processed. Please ask general questions about the document.\"}\n\nUser Question: ${question}\n\nPlease provide a helpful, informative response based on the PDF context above. If the question is about specific content in the PDF, use the context to answer it clearly. If it's a general question about the document, provide relevant insights based on what you can see.\n\nAnswer:`;\n      console.log('Sending request to Gemini API with context...');\n      console.log('Context length:', contextText.length);\n      const response = await axios.post(GEMINI_API_URL, {\n        contents: [{\n          parts: [{\n            text: prompt\n          }]\n        }],\n        generationConfig: {\n          temperature: 0.7,\n          topK: 40,\n          topP: 0.95,\n          maxOutputTokens: 1024\n        },\n        safetySettings: [{\n          category: \"HARM_CATEGORY_HARASSMENT\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        }, {\n          category: \"HARM_CATEGORY_HATE_SPEECH\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        }, {\n          category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        }, {\n          category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n          threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n        }]\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'x-goog-api-key': GEMINI_API_KEY\n        },\n        timeout: 30000 // 30 second timeout\n      });\n      console.log('Gemini API Response:', response.data);\n      if (response.data && response.data.candidates && response.data.candidates.length > 0) {\n        const candidate = response.data.candidates[0];\n        if (candidate.content && candidate.content.parts && candidate.content.parts.length > 0) {\n          const generatedText = candidate.content.parts[0].text;\n          if (generatedText && generatedText.trim().length > 0) {\n            return generatedText.trim();\n          } else {\n            throw new Error('Generated response is empty');\n          }\n        } else {\n          throw new Error('Invalid response structure from Gemini API');\n        }\n      } else {\n        throw new Error('No response candidates from Gemini API');\n      }\n    } catch (error) {\n      console.error('Gemini API Error:', error);\n      if (error.response) {\n        // Server responded with error status\n        if (error.response.status === 400) {\n          throw new Error('Invalid request to Gemini API. Please check your API key and try again.');\n        } else if (error.response.status === 401) {\n          throw new Error('Invalid API key. Please check your Google Gemini API key.');\n        } else if (error.response.status === 403) {\n          throw new Error('Access denied. Please check your API key permissions.');\n        } else if (error.response.status === 429) {\n          throw new Error('Rate limit exceeded. Please wait a moment before asking another question.');\n        } else if (error.response.status === 500) {\n          throw new Error('Gemini API server error. Please try again in a few minutes.');\n        } else if (error.response.status === 404) {\n          throw new Error('Gemini model not found. Please try again later.');\n        } else {\n          throw new Error(`Gemini API Error ${error.response.status}: ${error.response.statusText}`);\n        }\n      } else if (error.request) {\n        // Request was made but no response received\n        throw new Error('No response from Gemini API. Please check your internet connection and try again.');\n      } else {\n        // Something else happened\n        throw new Error(error.message || 'Failed to connect to Gemini API. Please try again.');\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 h-96 overflow-y-auto\",\n      children: conversationHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500 py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start asking questions about your PDF document!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [conversationHistory.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-primary text-white px-4 py-2 rounded-2xl rounded-br-md max-w-xs lg:max-w-md\",\n              children: message.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-start mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md max-w-xs lg:max-w-md\",\n              children: message.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 text-center mb-4\",\n            children: message.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-start mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI is thinking...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-6 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"text-red-500\",\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-700 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask a question...\",\n          className: \"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputMessage.trim() || isLoading,\n          className: \"bg-primary hover:bg-primary/90 disabled:bg-gray-300 text-white px-6 py-2 rounded-full transition-colors flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Send, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), \"Send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"4MsiRRSxRNeMKClt+FeQXMfKOo4=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","AlertCircle","axios","jsxDEV","_jsxDEV","GEMINI_API_KEY","GEMINI_API_URL","ChatInterface","conversationHistory","onNewMessage","documentInfo","suggestedQuestion","onSuggestedQuestionUsed","_s","inputMessage","setInputMessage","isLoading","setIsLoading","error","setError","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","question","response","generateAIResponse","err","message","contextText","textChunks","relevantChunks","slice","map","chunk","index","text","join","prompt","console","log","length","post","contents","parts","generationConfig","temperature","topK","topP","maxOutputTokens","safetySettings","category","threshold","headers","timeout","data","candidates","candidate","content","generatedText","Error","status","statusText","request","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","answer","timestamp","toLocaleTimeString","ref","size","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sanja/Pdfc/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Send, AlertCircle } from 'lucide-react';\r\nimport axios from 'axios';\r\n\r\n// Add your Gemini API key here\r\nconst GEMINI_API_KEY = \"AIzaSyAVnKwouHnPokho-KTK7KaEWQ4-1VuXm1g\";\r\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent\";\r\n\r\nconst ChatInterface = ({ conversationHistory, onNewMessage, documentInfo, suggestedQuestion, onSuggestedQuestionUsed }) => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Set suggested question when it changes\r\n  useEffect(() => {\r\n    if (suggestedQuestion) {\r\n      setInputMessage(suggestedQuestion);\r\n    }\r\n  }, [suggestedQuestion]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [conversationHistory]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const question = inputMessage.trim();\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    // Clear suggested question after use\r\n    if (suggestedQuestion && onSuggestedQuestionUsed) {\r\n      onSuggestedQuestionUsed();\r\n    }\r\n\r\n    try {\r\n      const response = await generateAIResponse(question);\r\n      onNewMessage(question, response);\r\n    } catch (err) {\r\n      setError(`Error getting AI response: ${err.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateAIResponse = async (question) => {\r\n    try {\r\n      // Get relevant text chunks from the PDF for context\r\n      let contextText = \"\";\r\n      if (documentInfo && documentInfo.textChunks) {\r\n        // For now, use the first few chunks as context\r\n        // In a full RAG implementation, you'd use semantic search here\r\n        const relevantChunks = documentInfo.textChunks.slice(0, 3);\r\n        contextText = relevantChunks.map((chunk, index) => \r\n          `[Chunk ${index + 1}]: ${chunk.text}`\r\n        ).join('\\n\\n');\r\n      }\r\n\r\n      // Create a context-aware prompt for PDF Q&A\r\n      const prompt = `You are a helpful AI assistant helping users understand PDF documents. \r\n\r\nContext from the uploaded PDF:\r\n${contextText || \"PDF content is being processed. Please ask general questions about the document.\"}\r\n\r\nUser Question: ${question}\r\n\r\nPlease provide a helpful, informative response based on the PDF context above. If the question is about specific content in the PDF, use the context to answer it clearly. If it's a general question about the document, provide relevant insights based on what you can see.\r\n\r\nAnswer:`;\r\n\r\n      console.log('Sending request to Gemini API with context...');\r\n      console.log('Context length:', contextText.length);\r\n      \r\n      const response = await axios.post(\r\n        GEMINI_API_URL,\r\n        {\r\n          contents: [{\r\n            parts: [{\r\n              text: prompt\r\n            }]\r\n          }],\r\n          generationConfig: {\r\n            temperature: 0.7,\r\n            topK: 40,\r\n            topP: 0.95,\r\n            maxOutputTokens: 1024,\r\n          },\r\n          safetySettings: [\r\n            {\r\n              category: \"HARM_CATEGORY_HARASSMENT\",\r\n              threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\r\n            },\r\n            {\r\n              category: \"HARM_CATEGORY_HATE_SPEECH\",\r\n              threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\r\n            },\r\n            {\r\n              category: \"HARM_CATEGORY_SEXUALLY_EXPLICIT\",\r\n              threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\r\n            },\r\n            {\r\n              category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\r\n              threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-goog-api-key': GEMINI_API_KEY\r\n          },\r\n          timeout: 30000 // 30 second timeout\r\n        }\r\n      );\r\n\r\n      console.log('Gemini API Response:', response.data);\r\n\r\n      if (response.data && response.data.candidates && response.data.candidates.length > 0) {\r\n        const candidate = response.data.candidates[0];\r\n        if (candidate.content && candidate.content.parts && candidate.content.parts.length > 0) {\r\n          const generatedText = candidate.content.parts[0].text;\r\n          \r\n          if (generatedText && generatedText.trim().length > 0) {\r\n            return generatedText.trim();\r\n          } else {\r\n            throw new Error('Generated response is empty');\r\n          }\r\n        } else {\r\n          throw new Error('Invalid response structure from Gemini API');\r\n        }\r\n      } else {\r\n        throw new Error('No response candidates from Gemini API');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Gemini API Error:', error);\r\n      \r\n      if (error.response) {\r\n        // Server responded with error status\r\n        if (error.response.status === 400) {\r\n          throw new Error('Invalid request to Gemini API. Please check your API key and try again.');\r\n        } else if (error.response.status === 401) {\r\n          throw new Error('Invalid API key. Please check your Google Gemini API key.');\r\n        } else if (error.response.status === 403) {\r\n          throw new Error('Access denied. Please check your API key permissions.');\r\n        } else if (error.response.status === 429) {\r\n          throw new Error('Rate limit exceeded. Please wait a moment before asking another question.');\r\n        } else if (error.response.status === 500) {\r\n          throw new Error('Gemini API server error. Please try again in a few minutes.');\r\n        } else if (error.response.status === 404) {\r\n          throw new Error('Gemini model not found. Please try again later.');\r\n        } else {\r\n          throw new Error(`Gemini API Error ${error.response.status}: ${error.response.statusText}`);\r\n        }\r\n      } else if (error.request) {\r\n        // Request was made but no response received\r\n        throw new Error('No response from Gemini API. Please check your internet connection and try again.');\r\n      } else {\r\n        // Something else happened\r\n        throw new Error(error.message || 'Failed to connect to Gemini API. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-sm\">\r\n      {/* Chat Messages */}\r\n      <div className=\"p-6 h-96 overflow-y-auto\">\r\n        {conversationHistory.length === 0 ? (\r\n          <div className=\"text-center text-gray-500 py-8\">\r\n            <p>Start asking questions about your PDF document!</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {conversationHistory.map((message, index) => (\r\n              <div key={index} className=\"animate-fade-in\">\r\n                {/* User Message */}\r\n                <div className=\"flex justify-end mb-3\">\r\n                  <div className=\"bg-primary text-white px-4 py-2 rounded-2xl rounded-br-md max-w-xs lg:max-w-md\">\r\n                    {message.question}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* AI Response */}\r\n                <div className=\"flex justify-start mb-3\">\r\n                  <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md max-w-xs lg:max-w-md\">\r\n                    {message.answer}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Timestamp */}\r\n                <div className=\"text-xs text-gray-400 text-center mb-4\">\r\n                  {message.timestamp.toLocaleTimeString()}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            \r\n            {/* Loading indicator */}\r\n            {isLoading && (\r\n              <div className=\"flex justify-start mb-3\">\r\n                <div className=\"bg-gray-100 text-gray-800 px-4 py-2 rounded-2xl rounded-bl-md\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-primary\"></div>\r\n                    <span>AI is thinking...</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"px-6 pb-4\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2\">\r\n            <AlertCircle className=\"text-red-500\" size={16} />\r\n            <span className=\"text-red-700 text-sm\">{error}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Input Section */}\r\n      <div className=\"border-t p-4\">\r\n        <div className=\"flex gap-3\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask a question...\"\r\n            className=\"flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\r\n            disabled={isLoading}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            disabled={!inputMessage.trim() || isLoading}\r\n            className=\"bg-primary hover:bg-primary/90 disabled:bg-gray-300 text-white px-6 py-2 rounded-full transition-colors flex items-center gap-2\"\r\n          >\r\n            <Send size={16} />\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}